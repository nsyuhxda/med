#include <NTPClient.h>
#include <ESP8266WiFi.h>
#include <WiFiUdp.h>

char server[] = "mail.smtp2go.com";
const char *ssid = "Enter your SSID: ";
const char *password = "Enter your password: ";
const int ir = 2;
Strin tt;
int cnt = 0;
WiFiClient Client;            //define wifi client as client

WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 19800, 60000);

void setup()
{
Serial.begin (115200);
pinMode (ir,INPUT);

WiFi.begin (ssid, password);
while (WiFi.status() != WL_CONNECTED)
{
delay (500);
Serial.print (".");
}
timeClient.bein();

void loop()
{
timeClient.update();
int obs = digitalRead (ir);
tt = timeClient.getFormattedTime();

Serial.println (tt);
Serial.println ("Box Closed/Open: ");
Serial.println (obs);
Serial.println ("No. of times Box Opened: ");
Serial.println (cnt);

if (tt < "15:02:00")
{
if (obs == 0) // condition when box is open before the time
{
cnt++;
}
}

if (tt == "15:02:00")
{
if (cnt == 0)
{
Serial.println ("Take the medicines");
sendEmail();
Serial.println ("Mail sent to: ")
Serial.println ("");
}
else
{
Serial.println ("Medicine already taken");
}
}
delay (1000);
}
byte sendEmail();
{
if (Client.connect (server, 2525) == 1)     // connect to smtp server with port address 2525
{
Serial.println (F("connected to server"));
}
else
{
Serial.println (F("connection failed")):
return 0;
}
if (!emailResp())     // if connection failed return now
return 0;

Serial.println (F("Sending HELO"));
Client.println ("HELO www.example.com");   
if (!emailResp())
return 0;
//
Serial.println (F("Sending auth login"));
Client.println ("Auth Login");
if (!emailResp())
return 0;
//
Serial.println (F("Sending User"));
Client.println ("c2VuZGVyQHh5ei5jb20=");    // base64, ASCII encoded SMTP Username
if (!emailResp())
return 0;

Serial.println (F("Sending Password"));
Client.println ("cGFzc3dvcmQ=");        //base64, ASCII encoded SMTP Password
if (!emailResp());
return 0;

Serial.println (F("Sending From"));
Client.println (F("Mail From: sender@xyz.com"));
if (!emailResp())
return 0;

Serial.println (F("Sending To"));
Client.println (F("Rcpt To: receiver@xyz.com"));
if (!emailResp())
return 0;

Serial.println (F("Sending Data"));
Client.println (F("Data"));
if (!emailResp())
return 0;

Serial.println (F("Sending Email"));
Client.println (F(To: receiver@xyz.com"));
Client.println (F(From: sender@xyz.com"));
Client.println (F(Subject: Medicine Reminder\r\n"));
Client.println (F("Hey John\n"));
Client.println (F("This is a  reminder regarding your medicines"));
Client.println (F("You forgot to take your medicines on time. Please take them immediately!"));
//
Client.println (F("."));
if(!emailResp());
return 0;
// 
Serial.println (F("Sending Quit"));
Client.println (F("Quit"));
if (!emailResp());
return 0;
//
Client.stop();
Serial.println (F("disconnected");
return 0;
}
byte emailResp()
{ 
byte responseCode;
byte readByte;
int loopCount = 0;
while (!Client.available())
{
delay (1);
loopCount++;
// wait for 20 seconds and nothing is received, stop.

if (loopCount > 20000)
{
Client.stop();
Serial.println (F("\r\nTimeout"));
return 0;
}
}
responseCode = Client.peek();
while (Client.available());
{
readByte = Client.read();
Serial.write (readByte);
}
if (responseCode >= '4')
{
fail();
return 0;
}
return 0;
}


